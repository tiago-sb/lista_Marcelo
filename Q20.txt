// Q20.
public class Main{
    public static void main(String[] args) {
    }
}
/*
 [Deitel-Cap.10] Utilizando interfaces (Java) você pode especificar comportamentos semelhantes para
classes possivelmente não relacionadas ou díspares. Há uma preocupação atual com as pegadas de
carbono (carbon footprints, emissões anuais de gás carbônico na atmosfera) a partir de instalações que
queimam vários tipos de combustíveis para aquecimento, veículos que queimam combustíveis para se
mover, e assim por diante. Nesse cenário:
a. Crie três pequenas classes não relacionadas por herança - classes Building, Car, e Bicycle. Dê a
cada classe alguns atributos e comportamentos (métodos) únicos que ela não tem em comum
com as outras classes. Sugestões:
i. Building: número de pessoas (int), uso de energia renovável (boolean), número de
lâmpadas (int), uso de ar-condicionado (boolean).
ii. Car: combustível (string), cilindrada (oat).
b. Escreva uma interface CarbonFootprint com um método getCarbonFootprint. Faça cada uma das
suas classes implementar essa interface, para que seu método getCarbonFootprint calcule uma
pegada de carbono apropriada a cada classe (usando os atributos sugeridos ou outros).
c. Escreva um aplicativo que crie 2 objetos de cada uma das três classes. Crie um objeto
ArrayList<CarbonFootprint> e insira as referências dos objetos instanciados nessa coleção.
Finalmente, itere pela coleção, chamando “polimorficamente” o método getCarbonFootprint de
cada objeto.
*/
